<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2016-12-09T22:09:36-05:00</updated><id>http://localhost:4000//</id><title type="html">Rob Porter</title><subtitle>Digital Naturalist</subtitle><entry><title type="html">Experimenting with Knex in Node.js Testing Frameworks: Mocha vs Jasmine</title><link href="http://localhost:4000/tdd-knex-nodejs/" rel="alternate" type="text/html" title="Experimenting with Knex in Node.js Testing Frameworks: Mocha vs Jasmine" /><published>2016-12-09T00:00:00-05:00</published><updated>2016-12-09T00:00:00-05:00</updated><id>http://localhost:4000/tdd-knex-nodejs</id><content type="html" xml:base="http://localhost:4000/tdd-knex-nodejs/">&lt;p class=&quot;notice&quot;&gt;Note: There are some assumed knowledges you’ll need to have and grasp upon in order to best appreciate the content. These include: Node.js (including some ES6), unit testing, &lt;a href=&quot;https://www.npmjs.com/package/restify&quot; target=&quot;_blank&quot;&gt;Restify&lt;/a&gt; (or &lt;a href=&quot;http://expressjs.com/&quot; target=&quot;_blank&quot;&gt;Express&lt;/a&gt;), and PostgreSQL (or mySQL).&lt;/p&gt;

&lt;p&gt;One of the trickier parts of unit testing can be mocking out database connections. The ideal unit test involves only testing your own code, not external dependencies. Therefore, you will want to mock out your calls to the database and generate fake responses.&lt;/p&gt;

&lt;p&gt;Additionally, managing schema changes to SQL databases can also be challenging. By using &lt;a href=&quot;https://www.npmjs.com/package/knex&quot; target=&quot;_blank&quot;&gt;Knex&lt;/a&gt;, managing database schema changes in Node.js is much easier, and completely documented and controlled by code. It is also a great tool for setup &amp;amp; teardown in integration tests, though lacks tools for proper mocking of unit tests.&lt;/p&gt;

&lt;p&gt;This is where &lt;a href=&quot;https://www.npmjs.com/package/mock-knex&quot; target=&quot;_blank&quot;&gt;Mock-Knex&lt;/a&gt; comes in – it can make mocked database calls easy, and integrate with your existing Knex setup easily. The Mock-Knex module provides functions for assertion libraries to use in unit tests.&lt;/p&gt;

&lt;p&gt;However, I discovered upon interrogating unit tests involving the &lt;code class=&quot;highlighter-rouge&quot;&gt;tracker.on()&lt;/code&gt; observable feature that were written with Mocha and Mock-Knex that it was unnervingly easy to create non-&lt;a href=&quot;http://codingismycraft.com/index.php/2016/05/25/falsifiability-and-unit-testing/&quot; target=&quot;_blank&quot;&gt;falsifiable&lt;/a&gt; tests unless very specific and unintuitive patterns were followed.&lt;/p&gt;

&lt;p&gt;I did some cursory research (aka Google search) to find good example patterns of the Mock-Knex module being used with Mocha or Jasmine, but it seemed most articles out there about this module were either agnostic or evasive about which test frameworks were being used under-the-hood.&lt;/p&gt;

&lt;p&gt;Thus I went forward with an experiment: is there an idea framework or combination of frameworks wherein the Mock-Knex observable &lt;code class=&quot;highlighter-rouge&quot;&gt;tracker.on()&lt;/code&gt; is fully falsifiable? Does the tracker feature have a flawed implementation, or are there problems in Mocha?&lt;/p&gt;

&lt;h2 id=&quot;testing-with-mocha&quot;&gt;Testing with Mocha&lt;/h2&gt;

&lt;p class=&quot;notice&quot;&gt;See the &lt;a href=&quot;https://github.com/rgeraldporter/knex-tdd-experiment&quot; target=&quot;_blank&quot;&gt;GitHub repository&lt;/a&gt; for the full code. This article references &lt;code class=&quot;highlighter-rouge&quot;&gt;src/routes/example/example.spec.js&lt;/code&gt; in four different branches depending on the framework combination being tested. In the interest of brevity only individual tests are posted as examples. For full context you’ll need to clone the repository and check out the appropriate branches.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Figure #1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Using: Mocha, Chai (with &quot;should&quot; extension)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Branch: hypothesis/mocha-chai&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'should not get a invalid thing'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// overriding the valid default with an invalid ID&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;112&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}};&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// track the queries&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'query'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bindings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;112&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// note that &quot;next&quot; is a chai.spy() that returns a Promise&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// otherwise assertions inside tracker.on() will be missed by Mocha&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getThing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;have&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;been&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;called&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;restify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NotFoundError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Not found'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This test does two things: verifies that the correct database query was passed into the database handler by the controller, and then verifies that the (fake) empty response from the database becomes a standard “404 Not Found” error.&lt;/p&gt;

&lt;p&gt;What’s strange about this test is that a passing condition via &lt;code class=&quot;highlighter-rouge&quot;&gt;tracker.on&lt;/code&gt; results in a 404 error, which Mocha interprets as an assertion failure. Thus this test cannot pass.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Figure #2

  The example controller
    getThing
      ✓ should get a valid thing
      1) should not get a invalid thing
      ✓ should not get a invalid thing
    postThing
      ✓ should return an error if thing is not included
      ✓ should have postgres call the INSERT query
      ✓ should return a 201 code on success


  5 passing (2s)
  1 failing

  1) The example controller getThing should not get a invalid thing:
     NotFoundError: Not found
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Two things need to happen to make this test pass &lt;em&gt;and&lt;/em&gt; be falsifiable. First, the &lt;code class=&quot;highlighter-rouge&quot;&gt;next&lt;/code&gt; function spy needs to be made into a regular empty function, and not return a &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise&lt;/code&gt;. The effect this has though, is that the assertions on the query itself will no longer be falsifiable. This leads to the second thing that needs to happen: I need to remove all assertion tests within the query tracker.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Figure #3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Using: Mocha, Chai (with &quot;should&quot; extension)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Branch: hypothesis/mocha-chai&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'should not get a invalid thing'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     
    &lt;span class=&quot;c1&quot;&gt;// setting next's spy to no longer return a Promise&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;spy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
     &lt;span class=&quot;c1&quot;&gt;// overriding the valid default with an invalid ID&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;112&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}};&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// just use the tracker to return a specific response from the mock DB&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// don't do any assertion tests here&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'query'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getThing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;have&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;been&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;called&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;restify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NotFoundError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Not found'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This passes fine, but what if we want to do assertion tests on the SQL queries? For that we’ll have to write a second, separate test to specifically target it.&lt;/p&gt;

&lt;p&gt;Here’s the secondary test:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Figure #4&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Using: Mocha, Chai (with &quot;should&quot; extension)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Branch: hypothesis/mocha-chai&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Note that we're passing the &quot;done()&quot; param function into the test&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'should not get a invalid thing'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// overriding the valid default with an invalid ID&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;112&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}};&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// we need try/catch or failures will be without explanation&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'query'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bindings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;112&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// note: no &quot;return&quot; here as this is not being treated as a Promise now&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// but rather as an async function due to done() being available&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getThing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;While this works, it’s a really unweildy way to write a test, and you’d either need to write a custom function to abstract this behaviour, or be very careful to remember to use this pattern each time. Both are bad solutions.&lt;/p&gt;

&lt;h3 id=&quot;why-is-this-necessary&quot;&gt;Why is this necessary?&lt;/h3&gt;

&lt;p&gt;Mocha has &lt;a href=&quot;https://mochajs.org/#asynchronous-code&quot; target=&quot;_blank&quot;&gt;two ways to deal with asynchronous tests&lt;/a&gt;: you either use &lt;code class=&quot;highlighter-rouge&quot;&gt;done&lt;/code&gt; as a parameter, and call &lt;code class=&quot;highlighter-rouge&quot;&gt;done()&lt;/code&gt; when your test is complete, or you &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; a Promise in the function.&lt;/p&gt;

&lt;p&gt;When you use &lt;code class=&quot;highlighter-rouge&quot;&gt;done&lt;/code&gt;, you will need to deal with errors by passing them into done, for example, as &lt;code class=&quot;highlighter-rouge&quot;&gt;done(err)&lt;/code&gt;. For the Mock-Knex tracker query this doesn’t work so great as the “errors” are really assertion errors, so you need to separate your passes and failures via &lt;code class=&quot;highlighter-rouge&quot;&gt;try&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;catch&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When you return a &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise&lt;/code&gt;, and you want to spy on &lt;code class=&quot;highlighter-rouge&quot;&gt;next&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;next&lt;/code&gt; will need to be a Promise itself in order for &lt;code class=&quot;highlighter-rouge&quot;&gt;tracker.on()&lt;/code&gt; to bubble up assertion errors properly. Unfortunately, other thrown errors within the controller get caught as if they are assertion errors in this pattern.&lt;/p&gt;

&lt;h3 id=&quot;mocha-woes&quot;&gt;Mocha woes&lt;/h3&gt;

&lt;p&gt;Unfortunately problems with a single test combining assertions for expected failures/errors in addition to listening to query events seems to be endemic in Mocha.&lt;/p&gt;

&lt;p&gt;The best solution within the Mocha ecosystem of frameworks that I have found is &lt;a href=&quot;http://sinonjs.org/&quot; target=&quot;_blank&quot;&gt;Sinon.JS&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Figure #5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Using: Mocha, Sinon&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Branch: hypothesis/mocha-sinon&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'should not get a invalid thing'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// With sinon it appears to be fine to have next() not return a Promise&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// but only because of a quirky bug of sorts...&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sinon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;spy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// overriding the valid default with an invalid ID&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;112&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}};&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// Note that we're using the Node.js built-in `assert` library&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'query'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bindings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;112&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getThing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;withArgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;restify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NotFoundError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Not found'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;called&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;With this pattern, tests work correctly in that you can pass and fail tests, however failures will be sorely lacking details in some cases. Any failure made in &lt;code class=&quot;highlighter-rouge&quot;&gt;tracker.on()&lt;/code&gt; will bubble up as a vague &lt;code class=&quot;highlighter-rouge&quot;&gt;false === true&lt;/code&gt; failure.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Figure #6

  The example controller
    getThing
      ✓ should get a valid thing (39ms)
      1) should not get a invalid thing
    postThing
      ✓ should return an error if thing is not included
      ✓ should have postgres call the INSERT query
      ✓ should return a 201 code on success


  4 passing (1s)
  1 failing

  1) The example controller getThing should not get a invalid thing:

      AssertionError: false == true
      + expected - actual

      -false
      +true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Yes, this does capture failures so the test is correctly falsifiable, but any test failures would need to be followed up with investigations about what exactly failed. It certainly isn’t ideal, and feels more like this is functioning this way not by design, but by a quirky bug at best.&lt;/p&gt;

&lt;h2 id=&quot;one-more-try-with-mocha&quot;&gt;One more try with Mocha&lt;/h2&gt;

&lt;p&gt;For my last test with Mocha, I substituted in TestDouble as the library of choice for spies and mocks. It &lt;a href=&quot;http://blog.testdouble.com/posts/2016-03-13-testdouble-vs-sinon.html&quot; target=&quot;_blank&quot;&gt;strongly bills itself as an alternative to Sinon&lt;/a&gt; and has a very attractive simplicity to its API.&lt;/p&gt;

&lt;p&gt;Unfortunately my experimenting revealed it had the exact same problem as Sinon, plus also created even more problems with the &lt;code class=&quot;highlighter-rouge&quot;&gt;tracker.on()&lt;/code&gt; assertions, where every test that had assertions occur in the tracker before reaching the TestDouble &lt;code class=&quot;highlighter-rouge&quot;&gt;td.verify()&lt;/code&gt; call caused the verify function to lay claim to the previous failures.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Figure #7&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Using: Mocha, TestDouble&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Branch: hypothesis/mocha-testdouble&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'should get a valid thing'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'query'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// this next one is 111, so will throw assertion failure&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bindings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;110&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
        &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'some data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getThing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'some data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In this example, I’ve intentionally made the &lt;code class=&quot;highlighter-rouge&quot;&gt;assert.equal()&lt;/code&gt; fail a test where it checks if the value is &lt;code class=&quot;highlighter-rouge&quot;&gt;110&lt;/code&gt; (it’s really &lt;code class=&quot;highlighter-rouge&quot;&gt;111&lt;/code&gt;). But the result is not good.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Figure #8

  The example controller
    getThing
      1) should get a valid thing
      ✓ should not get a invalid thing
    postThing
      ✓ should return an error if thing is not included
      - should have postgres call the INSERT query
      ✓ should have postgres call the INSERT query
      ✓ should return a 201 code on success


  4 passing (1s)
  1 pending
  1 failing

  1) The example controller getThing should get a valid thing:
     Error: Unsatisfied verification on test double.

  Wanted:
    - called with `(200, {value: &quot;some data&quot;})`.

  But there were no invocations of the test double.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In short, since something failed before TestDouble could try its verify, it complains that it never got the invocation and that complaint seems to supercede any assertion failures from within the tracker. Technically this test is still falsifiable, but the message explaining the source of the failure is quite misleading.&lt;/p&gt;

&lt;h2 id=&quot;working-with-jasmine&quot;&gt;Working with Jasmine&lt;/h2&gt;

&lt;p&gt;Jasmine, while very similar, has some significant differences to Mocha. The key difference for the purposes of this experiment is that it does not require other libraries to fill in features such as spies and mocks – these come built in.&lt;/p&gt;

&lt;p&gt;It also, thankfully, has no problems with handling my tracker code!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Figure #9&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Using: Jasmine&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Branch: hypothesis/jasmine&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'should not get a invalid thing'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// use a Jasmine spy for next&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jasmine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createSpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// overriding the valid default with an invalid ID&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;112&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}};&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'query'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bindings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;112&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getThing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toHaveBeenCalledWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;restify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NotFoundError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Not found'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It passes. But can it fail? If I take &lt;code class=&quot;highlighter-rouge&quot;&gt;expect(query.bindings[0]).toEqual(112);&lt;/code&gt; and change the value to, say, &lt;code class=&quot;highlighter-rouge&quot;&gt;111&lt;/code&gt;, let’s see what happens…&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Figure #10

Started
.F..

Failures:
1) The example controller getThing should not get a invalid thing
  Message:
    Expected 112 to equal 111.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;OK! Now, what is the test we have on &lt;code class=&quot;highlighter-rouge&quot;&gt;next()&lt;/code&gt; doesn’t pass? Let’s change &lt;code class=&quot;highlighter-rouge&quot;&gt;expect(next).toHaveBeenCalledWith(new restify.NotFoundError('Not found'));&lt;/code&gt; to expect a &lt;code class=&quot;highlighter-rouge&quot;&gt;BadRequestError&lt;/code&gt; error instead.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Figure #11

Started
.F..

Failures:
1) The example controller getThing should not get a invalid thing
  Message:
    Expected spy unknown to have been called with [ BadRequestError: Bad request! ] but actual calls were [ NotFoundError: Not found ].
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Again, full marks. We not only have a properly falsifiable test, but failures give meaningful data on what actually failed.&lt;/p&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;Clearly there are problems with the combination of Mocha and Mock-Knex under specific circumstances. These issues generally centre around the mixture of testing error conditions and tracking queries, specifically.&lt;/p&gt;

&lt;p&gt;I don’t think it would be fair here to lay blame on either of the libraries dicussed here, as both are quite robust and capable tools, it just seems that under some circumstances, they currently do not play well together. There does appear to be work-arounds, though they are far from ideal. I’ll continue to experiment to see if there can perhaps be a fix made in Mock-Knex to account for this behaviour.&lt;/p&gt;

&lt;p&gt;What does appear certain is that Mock-Knex and Jasmine work together very well. So far in my testing I have seen no issues with missing failures or inability to pass tests. It is not as pretty of an API as something like TestDouble, and the resulting output is also rather basic, but in the end nothing beats a tool that does what it’s supposed to do.&lt;img src=&quot;http://robporter.ca/assets/img/feather-7.svg&quot; style=&quot;width:33px;height:33px;display:inline;padding-left:6px&quot; /&gt;&lt;/p&gt;</content><category term="Node.js" /><category term="Javascript" /><category term="Knex" /><category term="Mocha" /><category term="Mock-Knex" /><category term="TDD" /><category term="unit testing" /><category term="Restify" /><category term="Express" /><category term="PostgreSQL" /><category term="Programming" /><summary type="html">Challenges encountered using Mock-Knex in unit tests with Node.js</summary></entry><entry><title type="html">The Arrival of the Carolina Wren in Hamilton</title><link href="http://localhost:4000/carolina-wren-onha-cbc/" rel="alternate" type="text/html" title="The Arrival of the Carolina Wren in Hamilton" /><published>2016-12-01T00:00:00-05:00</published><updated>2016-12-01T00:00:00-05:00</updated><id>http://localhost:4000/carolina-wren-onha-cbc</id><content type="html" xml:base="http://localhost:4000/carolina-wren-onha-cbc/">&lt;p class=&quot;notice&quot;&gt;In 2015, I took on the role of coordinator &amp;amp; compiler of the &lt;a href=&quot;http://hamiltonnature.org/birding/counts/christmas-bird-count/&quot; target=&quot;_blank&quot;&gt;Hamilton Christmas Bird Count (HCBC)&lt;/a&gt; for the Hamilton Naturalists’ Club. Lately I’ve been poring through the vast amounts of data accumulated over the decades. In a series of short posts, I explore how the Christmas Bird Count records can reveal some interesting facts about bird species in Hamilton.&lt;/p&gt;

&lt;h2 id=&quot;carolina-wren-a-non-migratory-resident&quot;&gt;Carolina Wren: A Non-Migratory Resident&lt;/h2&gt;

&lt;p&gt;I believe it was in the mid-2000s when I first heard a &lt;a href=&quot;https://www.allaboutbirds.org/guide/Carolina_Wren/sounds&quot; target=&quot;_blank&quot;&gt;Carolina Wren&lt;/a&gt;. I had no idea what I was hearing – it was a &lt;a href=&quot;http://www.xeno-canto.org/species/Thryothorus-ludovicianus&quot; target=&quot;_blank&quot;&gt;very loud bird&lt;/a&gt; that was surprisingly elusive, and the only bird calls I knew well enough to identify a species were rural farm birds and common urban birds. It wasn’t until the rise of &lt;a href=&quot;http://www.audubon.org/news/the-best-birding-apps-and-field-guides&quot; target=&quot;_blank&quot;&gt;mobile birding apps&lt;/a&gt;, which had actual recordings of bird species, that I finally identified the loud little wren.&lt;/p&gt;

&lt;p&gt;But I hadn’t really heard of this wren before, so where did it come from?&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;/assets/img/cbc-onha/carolina-wren.jpg&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/carolina-wren.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Carolina Wren, Princess Point Park, Hamilton, Ontario.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Indeed the Carolina Wren has been pushing its territorial boundaries north for a few decades now. It is non-migratory – which means like some common birds we see year-round (Black-capped Chickadee, Northern Cardinal) – they generally do not migrate unless they need to find a new space. They breed and winter in the same territory.&lt;/p&gt;

&lt;p&gt;All other wren species known to either breed or overwinter in Hamilton are migratory: the aptly named Winter Wren, also-aptly-named Marsh Wren, the summer-abundant House Wren, and rare and unpredicatable Sedge Wren. (The Sedge Wren is probably the best example of a migratory pattern taken to the extreme: individuals are known to breed in completely different parts of the continent year-to-year, having very low site fidelity.)&lt;/p&gt;

&lt;p&gt;What is also of note is that while Carolina Wrens are tiny and like to hide from view, they are not shy when it comes to singing. Like some other resident species, they can be heard singing in the winter. Black-capped Chickadee males are known to also do this, to sing loudly during the coldest days as a way of attracting a mate or reaffirming to a mate that they are strongly suited to not only enduring the winter, but thriving and singing through it.&lt;/p&gt;

&lt;p&gt;I’ve heard multiple Carolina Wrens singing loudly in -20°C weather in Hamilton. So there can be no doubt that when the HCBC data shows the rise in the count of Carolina Wrens, this is not due to the improved ability to find this species with the rise of digital cameras and birding apps, they do indeed call attention to themselves.&lt;/p&gt;

&lt;h3 id=&quot;the-data&quot;&gt;The Data&lt;/h3&gt;

&lt;figure&gt;
    &lt;a href=&quot;/assets/img/cbc-onha/carw.png&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/carw.png&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Hamilton Christmas Bird Count Data, 1953-2015&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;While the Winter Wren has been following a consistent ebb-and-flow pattern over the last 60 years, Carolina Wrens have been sporatically found in small numbers up until the late 1990s, and since then the count totals for this species have been taking off.&lt;/p&gt;

&lt;p&gt;In fact, 2015 was the best year by far for this species, with a count of 64 individuals. The Carolina Wren quickly has surpassed the Winter Wren as the most common wren to find in Hamilton in the winter.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;/assets/img/cbc-onha/carolina-wren-2.jpg&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/carolina-wren-2.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Carolina Wren, Spencer Creek, Dundas, Ontario.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;How many more Carolina Wrens could the region be host to? Many of the individuals counted are concentrated within the Cootes-to-Escarpment area, where there is better shelter and presumably more food for these tiny birds. They are also known to visit feeders as well, which also helps sustain the populations through harsh winters.&lt;/p&gt;

&lt;p&gt;It was presumed by some that the very harsh 2014-15 winter would cause a significant die-off of the population of Carolina Wrens, but the record showing in late 2015 might very well be proof that our local stock is finally hardy enough to endure the harshest of winters.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;A Carolina Wren singing. Loud for such a small bird. Dundas, Ontario &lt;a href=&quot;https://twitter.com/hashtag/HamOnt?src=hash&quot;&gt;#HamOnt&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/spring?src=hash&quot;&gt;#spring&lt;/a&gt; &lt;a href=&quot;http://t.co/06Y566UO4j&quot;&gt;pic.twitter.com/06Y566UO4j&lt;/a&gt;&lt;/p&gt;&amp;mdash; Rob Porter (@rgeraldporter) &lt;a href=&quot;https://twitter.com/rgeraldporter/status/582352809485553664&quot;&gt;March 30, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;For a while Hamilton was the most northerly range for this species, but it is still on the move northward. While non-migratory normally, as territories of pairs of birds are established some individuals are forced to move on to find territory elsewhere. One very ambitious individual was even found in &lt;a href=&quot;http://joshvandermeulen.blogspot.ca/2012/10/more-rarity-photos-from-moosonee.html&quot; target=&quot;_blank&quot;&gt;Moosonee&lt;/a&gt; a couple years ago, though extreme migrants like that often do not establish breeding populations.&lt;/p&gt;

&lt;p&gt;Is the Carolina Wren here to stay? Only time will tell, but with rising winter temperatures and plenty of bird feeders in Southern Ontario, it’s safe bet this loud little wren will be around for the foreseeable future.&lt;img src=&quot;http://robporter.ca/assets/img/feather-7.svg&quot; style=&quot;width:33px;height:33px;display:inline;padding-left:6px&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;gallery-the-wren-family&quot;&gt;Gallery: The Wren Family&lt;/h5&gt;

&lt;figure class=&quot;full&quot;&gt;
    &lt;a href=&quot;/assets/img/cbc-onha/marsh-wren.jpg&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/marsh-wren.jpg&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;/assets/img/cbc-onha/sedge-wren.jpg&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/sedge-wren.jpg&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;/assets/img/cbc-onha/house-wren.jpg&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/house-wren.jpg&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;/assets/img/cbc-onha/winter-wren.jpg&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/winter-wren.jpg&quot; /&gt;&lt;/a&gt;

    &lt;figcaption&gt;Marsh Wren, Sedge Wren, House Wren, Winter Wren&lt;/figcaption&gt;
&lt;/figure&gt;</content><category term="birding" /><category term="Christmas Bird Count" /><category term="nature" /><category term="ornithology" /><category term="Carolina Wren" /><category term="Hamilton&amp;#44; Ontario" /><category term="bird records" /><summary type="html">How the Hamilton Christmas Bird Count data illustrates the establishment of a booming population of Carolina Wrens in Hamilton.</summary></entry><entry><title type="html">The Rise of the Long-tailed Duck</title><link href="http://localhost:4000/cbc-ltdu/" rel="alternate" type="text/html" title="The Rise of the Long-tailed Duck" /><published>2016-11-01T00:00:00-04:00</published><updated>2016-11-01T00:00:00-04:00</updated><id>http://localhost:4000/cbc-ltdu</id><content type="html" xml:base="http://localhost:4000/cbc-ltdu/">&lt;p class=&quot;notice&quot;&gt;In 2015, I took on the role of coordinator &amp;amp; compiler of the &lt;a href=&quot;http://hamiltonnature.org/birding/counts/christmas-bird-count/&quot; target=&quot;_blank&quot;&gt;Hamilton Christmas Bird Count (HCBC)&lt;/a&gt; for the Hamilton Naturalists’ Club. Lately I’ve been poring through the vast amounts of data accumulated over the decades. In a series of short posts, I explore how the Christmas Bird Count records can reveal some interesting facts about bird species in Hamilton.&lt;/p&gt;

&lt;p&gt;The western side of Lake Ontario is considered to be a &lt;a href=&quot;http://www.ibacanada.org/site.jsp?siteID=ON022&quot; target=&quot;_blank&quot;&gt;“Important Bird Area” by IBA Canada&lt;/a&gt;, a designation partly owed to the reletively recent abundance of an arctic deep-diving duck species, the &lt;a href=&quot;https://www.allaboutbirds.org/guide/Long-tailed_Duck/id&quot; target=&quot;_blank&quot;&gt;Long-tailed Duck&lt;/a&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;/assets/img/cbc-onha/ltdu-male.jpg&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/ltdu-male.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Long-tailed Duck drake (male), Burlington Canal Lift Bridge, Hamilton/Burlington Border&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The Long-tailed Duck is a &lt;a href=&quot;http://www.xeno-canto.org/species/Clangula-hyemalis&quot; target=&quot;_blank&quot;&gt;rather chatty bird&lt;/a&gt;, so much so &lt;a href=&quot;https://ourfinefeatheredfriends.wordpress.com/2014/03/09/whats-in-a-name-long-tailed-ducks-stage-late-winter-invasion-of-northeast-tennessee/&quot; target=&quot;_blank&quot;&gt;that its now-retired racist name&lt;/a&gt; was probably inspired from the chatter. Since the late 1990s the counted population in the Hamilton Christmas Bird Count (HCBC) of this species has exponentially exploded, with previous counts in the dozens and hundreds suddenly escalating to the thousands and tens-of-thousands.&lt;/p&gt;

&lt;h3 id=&quot;the-data&quot;&gt;The Data&lt;/h3&gt;

&lt;figure&gt;
    &lt;a href=&quot;/assets/img/cbc-onha/ltdu-count.png&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/ltdu-count.png&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Hamilton Christmas Bird Count Data, 1953-2015&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;One of the &lt;a href=&quot;http://www.birdlife.org/datazone/info/ibacritglob&quot; target=&quot;_blank&quot;&gt;potentially qualifying criteria&lt;/a&gt; that IBA Canada uses for designating an Important Bird Area is the population of a species in a limited area – if a more than 1% of the estimated global population of a bird species is in one area, that automatically qualifies said area for designation. This is the case for the Western Lake Ontario IBA, due to the overwhelming numbers of wintering Long-tailed Ducks.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;/assets/img/cbc-onha/ltdu-female.jpg&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/ltdu-female.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Long-tailed Duck hen (female), Burlington Canal Lift Bridge, Hamilton/Burlington Border&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It may appear in the data that the last couple years have not been so great for this duck, but regular surveys now done throughout the winter starting in 2015 have shown that this is more of an artifact of the timing and limited scope of the HCBC. Since the count is only one day, a single day with poor visibility (flurries, rain, fog) or rough waters can throw off a year’s count of deep water diving ducks. These artifacts are usually offset by the average over many years’ counts.&lt;/p&gt;

&lt;p&gt;If you ever get a chance to go down to the pier by the &lt;a href=&quot;https://www.google.ca/maps/place/Burlington+Canal+Lift+Bridge/@43.2990589,-79.7953305,15z/data=!4m2!3m1!1s0x0:0x5ad3eefbdcca9d80?sa=X&amp;amp;ved=0ahUKEwji6eqY04rQAhUk2IMKHUyPCTYQ_BIIezAP&quot; target=&quot;_blank&quot;&gt;Burlington Canal Lift Bridge&lt;/a&gt; in the winter, it is a very cold place (the lake breeze on two sides is very chilling), but on a calm and clear day it can be a great experience to visit hundreds – perhaps even thousands – of these chatty, small arctic ducks.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;/assets/img/cbc-onha/ltdus.jpg&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/ltdus.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Raft of Long-tailed Ducks, Burlington Canal Lift Bridge, Hamilton/Burlington Border&lt;/figcaption&gt;
&lt;/figure&gt;</content><category term="birding" /><category term="Christmas Bird Count" /><category term="nature" /><category term="ornithology" /><category term="Long-tailed Duck" /><category term="waterfowl" /><category term="IBAs" /><category term="Lake Ontario" /><category term="Hamilton&amp;#44; Ontario" /><category term="Burlington&amp;#44; Ontario" /><category term="bird records" /><summary type="html">Western Lake Ontario has become home to a globally significant population of waterfowl, and the Hamilton Christmas Bird Count has documented this transition</summary></entry><entry><title type="html">eBird Histogramr</title><link href="http://localhost:4000/histogramr/" rel="alternate" type="text/html" title="eBird Histogramr" /><published>2016-10-30T00:00:00-04:00</published><updated>2016-10-30T00:00:00-04:00</updated><id>http://localhost:4000/histogramr</id><content type="html" xml:base="http://localhost:4000/histogramr/">&lt;p&gt;&lt;a href=&quot;http://ebird.org/&quot; target=&quot;_blank&quot;&gt;Cornell’s eBird&lt;/a&gt; provides some fairly nifty looking bar graphs on &lt;a href=&quot;http://ebird.org/ebird/GuideMe?cmd=decisionPage&amp;amp;getLocations=hotspots&amp;amp;hotspots=L2093687&amp;amp;yr=all&amp;amp;m=&quot; target=&quot;_blank&quot;&gt;Hotspot locations&lt;/a&gt;, but while you can download the data in a raw format, that format is a fairly obscure one. This project converts this data into a much more familar format, CSV.&lt;/p&gt;

&lt;p&gt;I have two NPM modules so far, &lt;code class=&quot;highlighter-rouge&quot;&gt;ebird-histogramr&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ebird-histogramr-cli&lt;/code&gt;, the later being for general usage by anyone and the former for Node.js programmers looking to work with the data in a Javascript API.&lt;/p&gt;

&lt;h2 id=&quot;read-more&quot;&gt;Read more…&lt;/h2&gt;

&lt;p&gt;You can read more on the &lt;a href=&quot;https://github.com/rgeraldporter/ebird-histogramr-cli&quot; target=&quot;_blank&quot;&gt;GitHub repo&lt;/a&gt;, and can even comment or contribute ideas. It currently requires some technical know-how to use, but I aim to improve that over time as the bugs get worked out.&lt;/p&gt;</content><category term="ebird" /><category term="birding" /><category term="CSV" /><category term="Node.js" /><category term="Javascript" /><category term="bird records" /><category term="ornithology" /><category term="digital naturalist tools" /><summary type="html">Convert eBird hotspot histograms into CSV files.</summary></entry><entry><title type="html">Avitext 1.0, a Text File Format for Bird Observations</title><link href="http://localhost:4000/avitext/" rel="alternate" type="text/html" title="Avitext 1.0, a Text File Format for Bird Observations" /><published>2016-10-30T00:00:00-04:00</published><updated>2016-10-30T00:00:00-04:00</updated><id>http://localhost:4000/avitext</id><content type="html" xml:base="http://localhost:4000/avitext/">&lt;div style=&quot;text-align:center;&quot;&gt;&lt;img src=&quot;/assets/img/avitext-sample.png&quot; style=&quot;width:50%;&quot; /&gt;&lt;/div&gt;
&lt;center&gt;&lt;b&gt;Avitext&lt;/b&gt; is a quick and easy way to record observations on your mobile device while in the field.&lt;/center&gt;

&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Avitext&lt;/strong&gt; is a plain text file format specification for bird species observations in the ABA region. It is designed to document checklists in the field as quickly as possible using a smartphone note-taking text application, such as iOS’s Notes or Google’s Keep app.&lt;/p&gt;

&lt;p&gt;It intends to fill a need for a method that is more easily transferrable than pen &amp;amp; paper without becoming as burdensome and slow as currently available record-keeping mobile apps.&lt;/p&gt;

&lt;h2 id=&quot;a-work-in-progress&quot;&gt;A work in progress…&lt;/h2&gt;

&lt;p&gt;You can read more on the &lt;a href=&quot;https://github.com/rgeraldporter/avitext-spec&quot; target=&quot;_blank&quot;&gt;GitHub repo&lt;/a&gt;, and can even comment or contribute ideas.&lt;/p&gt;</content><category term="birding" /><category term="specifications" /><category term="nature" /><category term="ornithology" /><category term="digital naturalist tools" /><category term="mobile" /><summary type="html">A quick method for recording observations of bird species in the field on a mobile device with just a plain text note-taking app.</summary></entry><entry><title type="html">Parser for Audubon’s Christmas Bird Count Data</title><link href="http://localhost:4000/cbc-parser/" rel="alternate" type="text/html" title="Parser for Audubon's Christmas Bird Count Data" /><published>2016-10-29T00:00:00-04:00</published><updated>2016-10-29T00:00:00-04:00</updated><id>http://localhost:4000/cbc-parser</id><content type="html" xml:base="http://localhost:4000/cbc-parser/">&lt;p&gt;The Audubon Society’s annual Christmas Bird Count (CBC) is the longest annual volunteer species count in the world, and has been going on since 1900. That means there’s a lot of data!&lt;/p&gt;

&lt;p&gt;Anyone can &lt;a href=&quot;http://netapp.audubon.org/CBCObservation/Historical/ResultsByCount.aspx&quot; target=&quot;_blank&quot;&gt;download the data from the Audubon&lt;/a&gt; for personal or non-profit/academic use. However the data isn’t in the friendliest format around. While you can download the data in CSV, PDF, Excel, or XML format, the structure is very difficult to work with.&lt;/p&gt;

&lt;p&gt;The data mixes total count records with other data points such as weather, participants, and the number of hours spent counting. Rather than spreadsheets with multiple pages seperating data, or splitting seperate kinds of data into separate files, everything is crammed into one.&lt;/p&gt;

&lt;p&gt;This is why I’ve written a parsing tool for using the historical CBC data.&lt;/p&gt;

&lt;h2 id=&quot;read-more&quot;&gt;Read more…&lt;/h2&gt;

&lt;p&gt;You can read more on the &lt;a href=&quot;https://github.com/rgeraldporter/audubon-cbc-cli&quot; target=&quot;_blank&quot;&gt;GitHub repo&lt;/a&gt;, and can even comment or contribute ideas. It currently requires some technical know-how to use, but I aim to improve that over time as the bugs get worked out.&lt;/p&gt;</content><category term="birding" /><category term="christmas bird count" /><category term="Audubon" /><category term="nature" /><category term="Node.js" /><category term="Javascript" /><category term="CSV" /><category term="bird records" /><category term="ornithology" /><category term="digital naturalist tools" /><summary type="html">Some tools for improving the usability of Audubon's CBC Data.</summary></entry><entry><title type="html">BirdBrain: A Bird Species in JSON Format</title><link href="http://localhost:4000/birdbrain/" rel="alternate" type="text/html" title="BirdBrain: A Bird Species in JSON Format" /><published>2016-10-29T00:00:00-04:00</published><updated>2016-10-29T00:00:00-04:00</updated><id>http://localhost:4000/birdbrain</id><content type="html" xml:base="http://localhost:4000/birdbrain/">&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;BirdBrain&lt;/strong&gt; is a simple Javascript library for interacting with avian species names and banding codes in the ABA region.&lt;/p&gt;

&lt;p&gt;Right now the API is quite simple, and the data is not fully optimized, so this library is quite large in size, and I do have some plans of making slimmed down versions that do not contain scientific names and make better use of more optimized JSON structures.&lt;/p&gt;

&lt;h2 id=&quot;for-more-info&quot;&gt;For more info…&lt;/h2&gt;

&lt;p&gt;You can read more on the &lt;a href=&quot;https://github.com/rgeraldporter/birdbrain/&quot; target=&quot;_blank&quot;&gt;GitHub repo&lt;/a&gt;, and can even comment or contribute ideas.&lt;/p&gt;</content><category term="birding" /><category term="Javascript" /><category term="nature" /><category term="ornithology" /><category term="digital naturalist tools" /><category term="JSON" /><summary type="html">A JavaScript library for working with avian species names and banding codes in the ABA region.</summary></entry><entry><title type="html">Evening Grosbeaks: Where are they now?</title><link href="http://localhost:4000/evgr-pufi/" rel="alternate" type="text/html" title="Evening Grosbeaks: Where are they now?" /><published>2016-10-28T00:00:00-04:00</published><updated>2016-10-28T00:00:00-04:00</updated><id>http://localhost:4000/evgr-pufi</id><content type="html" xml:base="http://localhost:4000/evgr-pufi/">&lt;p class=&quot;notice&quot;&gt;In 2015, I took on the role of coordinator &amp;amp; compiler of the &lt;a href=&quot;http://hamiltonnature.org/birding/counts/christmas-bird-count/&quot; target=&quot;_blank&quot;&gt;Hamilton Christmas Bird Count (HCBC)&lt;/a&gt; for the Hamilton Naturalists’ Club. Lately I’ve been poring through the vast amounts of data accumulated over the decades. In a series of short posts, I explore how the Christmas Bird Count records can reveal some interesting facts about bird species in Hamilton.&lt;/p&gt;

&lt;p&gt;If you speak to anyone who has been engaged with the Christmas Bird Count in Southern Ontario for more than twenty years, and ask about what they miss the most about the earlier counts, there’s a good chance the subject of grosbeaks will come up. There was a time when the large yellow Evening Grosbeaks, and sometimes their pinkish cousins the Pine Grosbeak, were bound to show up in large flocks for the winter.&lt;/p&gt;

&lt;p&gt;Those times appear to have passed, and though it isn’t entirely clear yet why that is, there are many theories.&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/assets/img/cbc-onha/evgr-pufi.png&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/evgr-pufi.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Hamilton Christmas Bird Count records, 1953-2015.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;From the 1960s through the mid-1980s, most years had occurrences of Evening Grosbeaks, and the count for the species in some of those years numbered in the hundreds.&lt;/p&gt;

&lt;p&gt;As a comparison, the Purple Finch (another “winter finch”), has seen decline but not as extreme as Evening Grosbeaks. Between 1990 and 2010, only two Evening Grosbeaks were counted in total; whereas Purple Finches have occurred regularly, although their count is usually in single-digit numbers.&lt;/p&gt;

&lt;p&gt;(Purple Finch observations since the 1980s may also be artificially lowered due to the recent over-abundance of the similar-looking introduced species, House Finch.)&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/assets/img/cbc-onha/purple-finch.jpg&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/purple-finch.jpg&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Purple Finch, Sulphur Spring Conservation Area, Hanover, Ontario&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;So where did the Evening Grosbeaks go?&lt;/p&gt;

&lt;p&gt;Some theories are &lt;a href=&quot;http://www.birdsource.org/Features/Evegro/&quot; target=&quot;_blank&quot;&gt;pointing to the warmer winters&lt;/a&gt; – the Evening Grosbeak need not come as far south anymore to survive the winter. Certainly there’s been a noted increase in winter populations in the “cottage country” regions of Ontario, with many more of these grosbeaks appearing at feeders than ever had previously.&lt;/p&gt;

&lt;p&gt;It’s also possible that the feeders themselves are partly responsible. With the greatly increased human population of the Muskokas and surrounding regions, the number of feeders must have certainly gone up dramatically.&lt;/p&gt;

&lt;p&gt;One other possibility is that the population(s) of Evening Grosbeaks that once visited Southern Ontario in flocks has been either wiped out or greatly diminished, leaving the only visitors either migrants that are headed further south to upstate New York or vagrants that have strayed from their flocks. This wouldn’t be unprecidented: winter populations of Field Sparrows, Eastern Meadowlarks, and White-winged Crossbills once were quite common and are now gone or very sporatic.&lt;/p&gt;

&lt;p&gt;There’s plenty of theories out there, as &lt;a href=&quot;http://blog.aba.org/2012/03/what-is-happening-to-evening-grosbeaks.html&quot; target=&quot;_blank&quot;&gt;this ABA Blog article&lt;/a&gt; points out it could be climate change, pesticides, cars, resource development, or even increased window collisions.&lt;/p&gt;

&lt;p&gt;There is some hope of their return. In 2014-2015, a small flock overwintered in &lt;a href=&quot;https://www.youtube.com/watch?v=EXnMALj8t9I&quot; target=&quot;_blank&quot;&gt;Toronto’s High Park bird sanctuary&lt;/a&gt; (video link), and that same year saw 6 of these grosbeaks counted in the HCBC.&lt;/p&gt;

&lt;p&gt;Out of the over 250 species I’ve seen within Hamilton, Evening Grosbeak is not one of them. I’m hoping soon that changes.&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/assets/img/cbc-onha/evening-grosbeak2.jpg&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/evening-grosbeak2.jpg&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Evening Grosbeak, High Park, Toronto, Ontario&lt;/figcaption&gt;
&lt;/figure&gt;</content><category term="birding" /><category term="Christmas Bird Count" /><category term="nature" /><category term="ornithology" /><category term="Evening Grosbeak" /><category term="Purple Finch" /><category term="Hamilton&amp;#44; Ontario" /><category term="Toronto&amp;#44; Ontario" /><category term="bird records" /><summary type="html">A once-abundant winter finch has all but dissapeared from Hamilton.</summary></entry><entry><title type="html">Invasion of the European Starlings</title><link href="http://localhost:4000/2016-cbc-stats-eust/" rel="alternate" type="text/html" title="Invasion of the European Starlings" /><published>2016-10-28T00:00:00-04:00</published><updated>2016-10-28T00:00:00-04:00</updated><id>http://localhost:4000/2016-cbc-stats-eust</id><content type="html" xml:base="http://localhost:4000/2016-cbc-stats-eust/">&lt;p class=&quot;notice&quot;&gt;In 2015, I took on the role of coordinator &amp;amp; compiler of the &lt;a href=&quot;http://hamiltonnature.org/birding/counts/christmas-bird-count/&quot; target=&quot;_blank&quot;&gt;Hamilton Christmas Bird Count (HCBC)&lt;/a&gt; for the Hamilton Naturalists’ Club. Lately I’ve been poring through the vast amounts of data accumulated over the decades. In a series of short posts, I explore how the Christmas Bird Count records can reveal some interesting facts about bird species in Hamilton.&lt;/p&gt;

&lt;h2 id=&quot;european-starlings&quot;&gt;European Starlings&lt;/h2&gt;

&lt;p&gt;By now you likely know the stories about how European Starlings came to invade North America. What you may not know however, is how incredibly dominant this species was, and how populations of starlings have begun to drop to much more reasonable sizes.&lt;/p&gt;

&lt;h3 id=&quot;some-years-it-was-almost-the-christmas-starling-count&quot;&gt;Some years it was almost the Christmas Starling Count…&lt;/h3&gt;

&lt;figure&gt;
	&lt;a href=&quot;/assets/img/cbc-onha/eust-total.png&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/eust-total.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Hamilton Christmas Bird Count records, 1953-2015.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Yes, that chart is &lt;strong&gt;European Starlings&lt;/strong&gt; vs &lt;strong&gt;all bird species counted&lt;/strong&gt; during the HCBCs.&lt;/p&gt;

&lt;p&gt;Here’s some observations about just how massive their numbers have been:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;From 1967 through the early 1990s, starlings accounted for over two-thirds of all birds counted&lt;/li&gt;
  &lt;li&gt;At their peak year of 1980, starlings accounted for 73,000 out of the 93,000 birds counted – that leaves only 20,000 birds that were not starlings&lt;/li&gt;
  &lt;li&gt;Since 1955, starlings accounted for almost a half of all birds ever counted: 1.5 million out of 3.4 million&lt;/li&gt;
  &lt;li&gt;The very first count to include the European Starling was one lone bird in 1924; within four years there were over 1700 counted&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In case you’re wondering, these ratios hold true even when accounting for volunteer count hours:&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/assets/img/cbc-onha/eust-per-hour.png&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/eust-per-hour.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Hamilton Christmas Bird Count records, 1953-2015.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The populations have dropped though since the 1990s, settling down to being between 10-15% of the overall count. This is a much more reasonable population, considering starlings are species well known to accumulate in very large flocks, especially in winter.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;A winter plumaged starling. Dundas, Ontario.&lt;a href=&quot;https://twitter.com/hashtag/HamOnt?src=hash&quot;&gt;#HamOnt&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/birds?src=hash&quot;&gt;#birds&lt;/a&gt; &lt;a href=&quot;http://t.co/wBFyGvyWzs&quot;&gt;pic.twitter.com/wBFyGvyWzs&lt;/a&gt;&lt;/p&gt;&amp;mdash; Rob Porter (@rgeraldporter) &lt;a href=&quot;https://twitter.com/rgeraldporter/status/559891380349042688&quot;&gt;January 27, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;Since European Starlings have been so dominant in the count in some years, it is worth taking a look at what the count looks like without them at all.&lt;/p&gt;

&lt;p&gt;These charts show the total count without any starlings, followed by the per-hour rate of birds counted each year excluding starlings:&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/assets/img/cbc-onha/eust-without.png&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/eust-without.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Hamilton Christmas Bird Count records, 1953-2015.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;a href=&quot;/assets/img/cbc-onha/eust-without-per-hour.png&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/eust-without-per-hour.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Hamilton Christmas Bird Count records, 1953-2015.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;This reveals that non-starling populations actually significantly increased in the late 1990s and early 2000s, and are currently in a general decline.&lt;/p&gt;

&lt;p&gt;Someday soon I’ll need to see if I can assemble a similar chart of non-indigenous species (NIS) vs indigenous species. Rock Piegons, House Finches, House Sparrows, and &lt;em&gt;possibly&lt;/em&gt; Canada Geese (not NIS, but are re-introduced and arguably invasive) are just a few possible species to compare.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;/assets/img/cbc-onha/european-starling.jpg&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/european-starling.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;European Starling male in alternate (breeding) plumage, McMaster Forest, Ancaster, Ontario.&lt;/figcaption&gt;
&lt;/figure&gt;</content><category term="birding" /><category term="Christmas Bird Count" /><category term="nature" /><category term="ornithology" /><category term="European Starling" /><category term="Hamilton&amp;#44; Ontario" /><category term="bird records" /><summary type="html">A look at the populations of European Starlings in Hamilton throughout the history of the Christmas Bird Count.</summary></entry><entry><title type="html">Winter Counts of Golden-crowned Kinglets and Brown Creepers</title><link href="http://localhost:4000/cbc-stats-1/" rel="alternate" type="text/html" title="Winter Counts of Golden-crowned Kinglets and Brown Creepers" /><published>2016-10-27T00:00:00-04:00</published><updated>2016-10-27T00:00:00-04:00</updated><id>http://localhost:4000/cbc-stats-1</id><content type="html" xml:base="http://localhost:4000/cbc-stats-1/">&lt;p class=&quot;notice&quot;&gt;In 2015, I took on the role of coordinator &amp;amp; compiler of the &lt;a href=&quot;http://hamiltonnature.org/birding/counts/christmas-bird-count/&quot; target=&quot;_blank&quot;&gt;Hamilton Christmas Bird Count (HCBC)&lt;/a&gt; for the Hamilton Naturalists’ Club. Lately I’ve been poring through the vast amounts of data accumulated over the decades. In a series of short posts, I explore how the Christmas Bird Count records can reveal some interesting facts about bird species in Hamilton.&lt;/p&gt;

&lt;h2 id=&quot;comparing-brown-creeper--golden-crowned-kinglet&quot;&gt;Comparing Brown Creeper &amp;amp; Golden-crowned Kinglet&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.allaboutbirds.org/guide/Brown_Creeper/id&quot; target=&quot;_blank&quot;&gt;Brown Creepers&lt;/a&gt; and &lt;a href=&quot;https://www.allaboutbirds.org/guide/Golden-crowned_Kinglet/id&quot; target=&quot;_blank&quot;&gt;Golden-crowned Kinglets&lt;/a&gt; are not closely related, however they are both great examples of species found only in winter in Hamilton that are a challenge to find unless you are well-prepared to find them. Rarely would a non-birder ever notice a Brown Creeper, and to a lesser extent the same applies to Golden-crowned Kinglets.&lt;/p&gt;

&lt;p&gt;Both species have several factors that make them more difficult to spot.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;A Brown Creeper, picking out hibernating insects from tree bark. McMaster Forest, Ancaster &lt;a href=&quot;https://twitter.com/hashtag/Ontario?src=hash&quot;&gt;#Ontario&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/HamOnt?src=hash&quot;&gt;#HamOnt&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/birds?src=hash&quot;&gt;#birds&lt;/a&gt; &lt;a href=&quot;https://t.co/K9HySxHM8e&quot;&gt;pic.twitter.com/K9HySxHM8e&lt;/a&gt;&lt;/p&gt;&amp;mdash; Rob Porter (@rgeraldporter) &lt;a href=&quot;https://twitter.com/rgeraldporter/status/689285996920356865&quot;&gt;January 19, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;Brown Creepers spend their time creeping up trees on the trunk and major branches, picking out hibernating insects &amp;amp; insect larvae from within bark crevices as food. They camouflage very well against the bark, enough to be unnoticable if it is either not right in front of you, or you don’t know how to look for them. They are also small, and have a song &amp;amp; call that are high pitched enough that it is not uncommon to meet older birders who can no longer hear them at all.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;A tiny breeding-plumaged male Golden-crowned Kinglet, with some extra red in his cap. Princess Point, &lt;a href=&quot;https://twitter.com/hashtag/HamOnt?src=hash&quot;&gt;#HamOnt&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/birds?src=hash&quot;&gt;#birds&lt;/a&gt; &lt;a href=&quot;http://t.co/xGO4BhNuLD&quot;&gt;pic.twitter.com/xGO4BhNuLD&lt;/a&gt;&lt;/p&gt;&amp;mdash; Rob Porter (@rgeraldporter) &lt;a href=&quot;https://twitter.com/rgeraldporter/status/585259418620682240&quot;&gt;April 7, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;Golden-crowned Kinglets on the other hand, are found flocking together, often high in the treetops of deciduous trees, or anywhere in conifers, moving very quickly in and out of the shelter of the conifer. They are tiny (the smallest winter bird), and also have high-pitched calls that can be hard for some to hear. They feed on tiny caterpillars that somehow survive the winter in a frozen state – a fact only &lt;a href=&quot;http://www.nytimes.com/2003/01/07/science/scientist-at-work-bernd-heinrich-signs-of-survival-in-a-frozen-forest.html&quot; target=&quot;_blank&quot;&gt;discovered reletively recently&lt;/a&gt;, in the early 2000s.&lt;/p&gt;

&lt;p&gt;For both, the best bet for finding and counting these species is by ear. When that isn’t practical, seeking out Black-capped Chickadee flocks in forested areas might reveal a mixed-species flock that might include one or both of these species. The kinglets will tend to group close together, and creepers will be in a flock that is spread across multiple trees, where they will climb up the trunk to near the top, then fly down to the bottom of the trunk of the next tree to climb up again.&lt;/p&gt;

&lt;h4 id=&quot;the-hcbc-data&quot;&gt;The HCBC Data&lt;/h4&gt;

&lt;figure&gt;
	&lt;a href=&quot;/assets/img/cbc-onha/gcki-brcr.png&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/gcki-brcr.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Hamilton Christmas Bird Count records, 1953-2015.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;What’s amazing in the HCBC data is that both species are regularly counted, and more or less line up with one another – when one is up, the other is up. If one is scarce, so is the other. They are not closely related, and do sometimes flock together in mixed-species flocks, but save for one year with a record count of kinglets, they line up well.&lt;/p&gt;

&lt;p&gt;The first reason I feel this chart is significant has nothing to do with the birds themselves however, it is that it demonstrates the consistent skills of the volunteer counters in the field. There are no years where these species were not found, and low years appear to be explained by very poor weather conditions.&lt;/p&gt;

&lt;p&gt;Beyond that the consistency of the chart over the decades shows that these species &lt;em&gt;may&lt;/em&gt; have stable populations. To verify this, we can take a look at another chart, which takes into account the amount of effort put into counting birds as “count-per-hour”.&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/assets/img/cbc-onha/gcki-brcr-perhour.png&quot;&gt;&lt;img src=&quot;/assets/img/cbc-onha/gcki-brcr-perhour.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Hamilton Christmas Bird Count records, 1953-2015.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;What we see is that the raw count data isn’t very misleading. There’s a couple spikes here, but otherwise it remains fairly consistent over time with perhaps a slightly below average count in the last 15 years.&lt;/p&gt;

&lt;p&gt;Both these species depend on wooded areas, something that has been on the decline in Hamilton since the count started in 1921. Fifty years ago, the Hamilton Mountain still had many woodlots, and is now reduced to a small handful. It’s amazing there hasn’t been a drastic decline locally yet, and hopefully we’ll be seeing and hearing (or for most, not seeing and hearing) them for a while yet.&lt;/p&gt;</content><category term="birding" /><category term="Christmas Bird Count" /><category term="nature" /><category term="ornithology" /><category term="Hamilton&amp;#44; Ontario" /><category term="bird records" /><summary type="html">How two tiny and elusive bird species can demonstrate the skill of Hamilton's Christmas Bird Count volunteers.</summary></entry></feed>
